Imports: {
	import static gate.Utils.*;
	import BHI.ReportExtractor.JapeRhsProcessor;
}



Phase: AortaSovVisualDiameter
Input: Token Anatomy VarSentence Units Categorical Numeric Lookup Split
Options: control=Appelt negationGrouping=false

Macro: CONTEXT
(
	{Anatomy,
		Anatomy within {VarSentence.minorType == "sinus_of_valsalva"},
		Anatomy.minorType == "sinus_of_valsalva"}
)

Macro: CONTEXT_OTHER_AORTA
(
	({Lookup.minorType == "conjunction"} | {Lookup.minorType == "preposition"} | {Token.string=="/"} | {Token.string==","})?
	{Anatomy,
		Anatomy within {VarSentence.minorType == "sinus_of_valsalva"},
		Anatomy.majorType == "aorta"}
	({Lookup.minorType == "conjunction"} | {Lookup.minorType == "preposition"} | {Token.string=="/"} | {Token.string==","})?
)

Macro: FILTER
(
	{Token,
		!Anatomy,
		!Lookup.minorType == "conjunction",
		!Categorical, 
		!Split.kind == "external",
		Token within {VarSentence.minorType == "sinus_of_valsalva"}}
)

Macro: FILTER_ALLOW_NEG_MODIF
(
	{Token,
		!Anatomy,
		!Lookup.minorType == "conjunction",
		!Categorical.minorType != "negative_modifier",
		!Split.kind == "external",
		Token within {VarSentence.minorType == "sinus_of_valsalva"}}
)

Macro: VALUE
(
	({Categorical, 
		Categorical.minorType == "dilated", 
		Categorical within {VarSentence.minorType == "sinus_of_valsalva"}}) |
	({Categorical, 
		Categorical.minorType == "nondilated",
		Categorical within {VarSentence.minorType == "sinus_of_valsalva"}})
)

Macro: MODIFIER
(
	{Categorical, 
		Categorical.minorType == "negative_modifier",
		Categorical within {VarSentence.minorType == "sinus_of_valsalva"}}
)

/*
 * Description:
 * Of the form... (we want the height indexed if both are specified)
 * e.g. 'Sov is not dilated when corrected to BSA, however is dilated when indexed to height.
 */
Rule: ao_sov_cat_1
Priority: 101
(
	(
		(CONTEXT (CONTEXT_OTHER_AORTA)[0,2]) |
		((CONTEXT_OTHER_AORTA)[0,2] CONTEXT) |
		((CONTEXT_OTHER_AORTA)[0,1] CONTEXT (CONTEXT_OTHER_AORTA)[0,1])
	):context
	
	( 	{Token,
			!Anatomy, 
			!Split.kind == "external",
			Token within {VarSentence.minorType == "sinus_of_valsalva"}} )[0,30]
			
	( (MODIFIER)? ):modifier
	
	( FILTER )[0,2]

	( VALUE ):value
	
	({Token})?
	 {Lookup.majorType == "indexed"}
	({Lookup.minorType == "preposition"})?
	 {Lookup.majorType == "height"}

):ao_sov_cat 
--> 
:ao_sov_cat
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_sov_cat", doc, bindings, outputAS);
}

/*
 * Description:
 * Of the forms...
 * e.g. 'Sinus of Valsalva is not dilated for height'
 * e.g. 'Sov, Stj, Asc ao are not dilated'
 * e.g. 'Stj and SOV are not dilated'
 * e.g. 'Stj and SOV, neither are dilated'
 */
Rule: ao_sov_cat_2
Priority: 100
(
	(
		(CONTEXT (CONTEXT_OTHER_AORTA)[0,2]) |
		((CONTEXT_OTHER_AORTA)[0,2] CONTEXT) |
		((CONTEXT_OTHER_AORTA)[0,1] CONTEXT (CONTEXT_OTHER_AORTA)[0,1])
	):context
	
	( FILTER_ALLOW_NEG_MODIF )[0,20]
			
	( (MODIFIER)? ):modifier
	
	( FILTER )[0,2]

	( VALUE ):value
	
):ao_sov_cat 
--> 
:ao_sov_cat
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_sov_cat", doc, bindings, outputAS);
}

/*
 * Description:
 * Of the forms...
 * e.g. 'Non-dilated Sov'
 * e.g. 'No evidence of significant dilation of the SoV'
 * e.g. 'Not dilated at the Sov'
 * e.g. 'Non-dilated aortic root at the Sov'
 * e.g. 'Non-dilated ascending aorta at the Sov level'
 * e.g. 'Non dilated proximal aorta to sinus level.'
 * e.g. 'Non-dilated aortic root at the Sov and Stj'
 * e.g. 'Non dilated proximal aorta (3.1cm at the level of the SOV).'
 */
Rule: ao_sov_cat_3
Priority: 99
(
	( (MODIFIER)? ):modifier
	
	( FILTER )[0,3]

	( VALUE ):value
	
	(
		({Anatomy,
			Anatomy.minorType == "aortic_root",
			Anatomy within {VarSentence.minorType == "sinus_of_valsalva"}} |
		 {Anatomy,
			Anatomy.minorType == "ascending_aorta",
			Anatomy within {VarSentence.minorType == "sinus_of_valsalva"}})
		
		( FILTER )[0,5]
				
		{Lookup.minorType == "preposition"}
	)?
	
	( FILTER )[0,4]
			
	(
		(CONTEXT (CONTEXT_OTHER_AORTA)[0,2]) |
		((CONTEXT_OTHER_AORTA)[0,2] CONTEXT) |
		((CONTEXT_OTHER_AORTA)[0,1] CONTEXT (CONTEXT_OTHER_AORTA)[0,1])
	):context	
	
):ao_sov_cat 
--> 
:ao_sov_cat
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_sov_cat", doc, bindings, outputAS);
}

/*
 * Description:
 * Of the form...
 * e.g. 'Non dilated proximal aorta (3.1cm SOV level).'
 */
Rule: ao_sov_cat_4
Priority: 98
(
	( (MODIFIER)? ):modifier
	
	( FILTER )[0,3]

	( VALUE ):value
	
	({Anatomy,
		Anatomy.minorType == "aortic_root",
		Anatomy within {VarSentence.minorType == "sinus_of_valsalva"}} |
	 {Anatomy,
		Anatomy.minorType == "ascending_aorta",
		Anatomy within {VarSentence.minorType == "sinus_of_valsalva"}})
	
	{Token.kind == "punctuation", Token.position == "startpunct"}
	
	( FILTER )[0,4]
			
	( CONTEXT ):context
	
):ao_sov_cat 
--> 
:ao_sov_cat
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_sov_cat", doc, bindings, outputAS);
}

/*
 * Description:
 * Of the form...
 * e.g. 'Sinus of Valsalva 4.1cm, proximal ascending aorta 4.3cm, neither are dilated'
 * e.g. 'SoV 4.1cm, Stj 4.1cm, Asc Ao 4.1cm, all are dilated'
 */
Rule: ao_sov_cat_5
Priority: 97
(
	( CONTEXT ):context	
	
	( {Token,
		!Categorical,
		!Split.kind == "external",
		Token within {VarSentence.majorType == "aorta"}} )[0,20]

	( {Lookup.minorType == "distributive_determiner"} |
	  
	  ({Lookup.minorType == "distributive_determiner",
	  		Categorical.minorType == "negative_modifier",
	  		Categorical within {VarSentence.majorType == "aorta"}}):modifier )
	
	( {Token,
		!Anatomy,
		!Categorical,
		!Split.kind == "external",
		Token within {VarSentence.majorType == "aorta"}} )[0,2]

	( ({Categorical, 
		Categorical.minorType == "dilated", 
		Categorical within {VarSentence.majorType == "aorta"}}) |
	  ({Categorical, 
		Categorical.minorType == "nondilated",
		Categorical within {VarSentence.majorType == "aorta"}}) ):value
	
):ao_sov_cat 
--> 
:ao_sov_cat
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_sov_cat", doc, bindings, outputAS);
}