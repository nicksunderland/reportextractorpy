Imports: {
	import static gate.Utils.*;
	import BHI.ReportExtractor.JapeRhsProcessor;
}



Phase: AorticRootDiameterHeightIndexed
Input: Anatomy Numeric Units Lookup Split Token VarSentence
Options: control=Appelt negationGrouping=false

Macro: CONTEXT
(
	{Anatomy,
		Anatomy within {VarSentence.minorType == "aortic_root"},
		Anatomy.minorType == "aortic_root"}
)

Macro: FILTER
(
	{Token,
		!Anatomy.minorType != "aortic_root",
		!Lookup.majorType == "body_surface_area",
		!Units.majorType == "z_score", 
		!Lookup.majorType == "quantity_change", 
		Token within {VarSentence.minorType == "aortic_root"}}
)

Macro: VALUE
(
	{Numeric,
		Numeric within {VarSentence.minorType == "aortic_root"}, 
		Numeric.type == "double"} |
	{Numeric,
		Numeric within {VarSentence.minorType == "aortic_root"}, 
		Numeric.type == "integer"}
)

Macro: UNITS
(
	{Units,
		Units within {VarSentence.minorType == "aortic_root"},
		Units.majorType == "length/length"}
)

/*
 * Description:
 * This is the most common form, e.g. 'the root is dilated at 45mm (22mm/m)'
 */
Rule: ao_root_diam_ht_idx
Priority: 100
(
	( CONTEXT ):context
	
	( FILTER )[0,20]
	
	( VALUE ):value
	
	( UNITS ):unit
	
):ao_root_diam_ht_idx
--> 
:ao_root_diam_ht_idx
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_root_diam_ht_idx", doc, bindings, outputAS);
}

/*
 * Description:
 * Of the form 'indexed to height the root is dilated at 45mm (22mm/m)'
 */
Rule: ao_root_diam_ht_idx_2
Priority: 98
(
	(
		{Lookup,
			Lookup.majorType == "indexed",
			Lookup within {VarSentence.minorType == "aortic_root"}}
		({Token})?
		{Lookup.majorType == "height"}
		({Token})?
		( CONTEXT )
	):context
	
	( FILTER )[0,20]
	
	( VALUE ):value
	
	( (UNITS)? ):unit
	
	({Token, !Units} | {Split})
	
):ao_root_diam_ht_idx 
--> 
:ao_root_diam_ht_idx
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_root_diam_ht_idx", doc, bindings, outputAS);
}

/*
 * Here we allow words like "indexed" or "normalised" without reference to what they are 
 * indexed to, AS LONG AS the units are enforced as length/length (e.g. cm/m) so that we 
 * can infer that they are indexing to height
 * e.g. indexed root = 33mm/m
 */
Rule: ao_root_diam_ht_idx_3
Priority: 97
(
	(
		{Lookup,
			Lookup.majorType == "indexed",
			Lookup within {VarSentence.minorType == "aortic_root"}}
		( CONTEXT )
	):context
	
	( FILTER )[0,30]
	
	( VALUE ):value
	
	( UNITS ):unit
	
):ao_root_diam_ht_idx
--> 
:ao_root_diam_ht_idx
{
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "ao_root_diam_ht_idx", doc, bindings, outputAS);
}
