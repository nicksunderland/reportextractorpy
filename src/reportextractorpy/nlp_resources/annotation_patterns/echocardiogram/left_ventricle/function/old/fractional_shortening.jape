Imports: {
	import static gate.Utils.*;
	import BHI.ReportExtractor.JapeRhsProcessor;
}

Phase: fractional_shortening
Input: Token Lookup  
Options: control=Appelt 



Rule: lv_fs_rule_1
(
		
	(
		({Token.string == "FS"})
		({Token.string == "="})?
	):context

	(
		({Token.kind == "number"})?
		({Token.string == "."})?
		{Token.kind == "number"}
	):value

	(
		({Token.string == "%"})
	):unit

):lv_fs 
--> 
:lv_fs
  {
	/* Creation of the processor object does an 'in-place' processing of the annotations found using the above rules.
	 * Using the bindings, strings are extracted from the doc, processed/parsed, then inserted into the outputAS (output
	 * annotation set).	
	 */
	JapeRhsProcessor processor = new JapeRhsProcessor("echocardiogram", "lv_fs",
			  										  doc, 
			  										  bindings, 
			  										  outputAS);
  }
  